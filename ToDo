A package that parses arguments.
It allows keys to be set by "-f" or by "--flag",
by "-o set" or by "--option=set".
Single letter keys can be grouped, like "-of".
The parsing stops at last argument or when finding "--"

The restrictions on arguments are:
- a space as argument is forbidden (and detected).
- when grouped, single char keys cannot have options. So, if "-o/--option"
can have an option, then in case of "-ao" it has no option.
- any argument starting by "-" must match the input specification.

As input it takes an array of records, each with:
- a char key (possibly space)
- a Ustr (Ada.Strings.Unbounded) key (possibly Null)
- A boolean indicating if it can appear several times
- A boolean indicating if it can have an option

As output it returns a private object that supports the following operations:

-- Global info:
-- A global result (OK, NOK) and an error string ("OK", "Error: ...")
-- Return position of last argument related to keys (including
--  the possible option of a char key)
function Get_Last_Position_Of_Keys return Natural;
-- Return position of first argument not related to keys (taking into account
--  the possible option of a char key) and skipping "--" if any.
function Get_First_Position_After_Keys return Natural;

-- Info per key: Index is relative to the array provided as input
-- Nb of occurences of the key, possibly 0
function Get_Nb_Occurences (Index : Positive) return Natural;
-- Absolute position of an occurence, possibly 0
function Get_Position (Index : Positive; Occurence : Positive) return Natural;
-- Option of a key, possibly empty
function Get_Option (Index : Positive; Occurence : Positive) return String;
