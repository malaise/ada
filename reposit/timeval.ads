-- Tranformation between C_Types.Timeval and Perpet.Delta_Rec
with Perpet, C_Types;
package Timeval is

  subtype Timeval_T is C_Types.Timeval_T;

  -- Negative values cannot be generated by conversion from Perpet.Delta_Rec
  --  but they conventionnaly mean infinite delay and are handled as such by
  --  Image
  Infinite_Timeout : constant Timeval_T := (-1, -1);

  -- Convert a Perpet.Delta_Rec into Timeval
  function Delta2Timeout (Delta_Date : Perpet.Delta_Rec)
                          return Timeval_T;

  -- Convert a Timeval into Perpet.Delta_Rec
  function Timeout2Delta (Timeout : Timeval_T) return Perpet.Delta_Rec;

  -- Image of a Timeval, "Infinite" if Tv_Sec < 0 or Tv_Usec < 0
  --  otherwise SS.uuuuuu
  function Image (Timeout : Timeval_T) return String;

  -- Ensure that abs(Tv_Usec) < 1_000_000 and that Tv_Sec and Tv_Usec have the
  --  same sign
  procedure Normalize (Timeout : in out Timeval_T);

  -- If overflow on Tv_Sec in Delta2Timeout
  -- If Timeout of Timeout2Delta is < 0
  Timeval_Error : exception;

end Timeval;

