Afpx
====

xref:XAfpx[Afpx] is a manager of text-oriented input sceens. +
All the screens (descriptors) for an application are described in a XML
configuration file. A descriptor consists in an optional 'List' and in several
fields that can be of kind 'Put', 'Get' or 'Button'. +
See the file *Afpx.dtd* for a detailed description of the XML syntax. +

xref:XAfpx_bld[afpx_bld] is a compiler that reads a Afpx XML configuration file
and generates binary files that are read by the Afpx package at start-up.

xref:XAfpx_rnb[afpx_rnb] is a tool that helps inserting and deleting fields in
a Afpx XML file.

Afpx
----
anchor:XAfpx[]
Afpx package provides the application with an API that allows:

* Defining which descriptor to use,

* Modifing the colors or content of the list or of fields,

* Launching a Put_Then_Get session that allows the user to navigate in the list,
to input some text, and to click in buttons,

* Retrieving the result of the user actions.

See the file *afpx.ads* for a detailed description of the services. +

Afpx-Utils
----------
Afpx-Utils package provides some utilities to encode text in fields.

afpx_bld
--------
anchor:XAfpx_bld[]
afpx_bld takes as input a Afpx XML configuration file and generates binary
files for the Afpx package. +

.Options
Its options are:

* -l<afpx_file> to specify the name of the Afpx XML configuration file.
Default is "Afpx.xml".

* -d<dest_dir> to specify the directory for the binary files. Default is \'.'.

* -x<cross_ref_package> to specify the name of the cross_reference package.
By default, if no package is specified, then afpx_bld does not generate it.

.Outputs
afpx_bld generates 3 binary files named AFPX.DSC (that contains the definition
of the descriptors), AFPX.FLD (that contains the definition of the fields) and
AFPX.INI (that contains the initialization strings of the fields).

If option \'-x' is set, then afpx_bld also generates a file that contains a
package of cross references. This package contains sub-packages, one for each
descriptor, each named with the \'Name' attribute provided in the XML
definition of the descriptor (default \'DSCR_xxx' where xxx is the descriptor
number on three digits. +
For each package, afpx_bld generates a constant named \'Dscr_Num', with the
value set to the number of the descriptor mapped by the package.  +
For each field that has a \'Name' attribute in the XML definition,
afpx_bld generates a constant with this name and the value set to the field
number in the XML definition. +

Example:

  -- Generated by afpx_bld
  with Afpx;
  package Afpx_Xref is
    package Main is
      Dscr_Num : constant Afpx.Descriptor_Range := 001;
      Top : constant Afpx.Field_Range := 002;
      Bottom : constant Afpx.Field_Range := 008;
  ...


afpx_rnb
--------
anchor:XAfpx_rnb[]
In the Afpx XML definition file, the fields within a descriptor must be
strictly crescent. afpx_rnb allows inserting, deleting, moving or copying 
fields within a descriptor. afpx_rnb renumbers the fields and keeps up to date
the references (in geometry, init strings or variables) to field numbers.

.Syntax

  afpx_rnb [ <file> ] [ <output> ] [ <force> ] <descriptor> <action> [ <number> ]
   <file>       ::= -f <file_name> | --file=<file_name>
   <output>     ::= -o <file_name> | --output=<file_name>
   <force>      ::= -F | --force
   <descriptor> ::= -D <descriptor_num> | --descriptor=<descriptor_num>
   <action>     ::= <insert> | <delete> | <move> | <copy>
   <insert>     ::= -i <field_num> | --insert=<field_num>
   <delete>     ::= -d <field_num> | --delete=<field_num>
   <move>       ::= -m <from_field:to_field> | --move=<from_field:to_field>
   <copy>       ::= -c <from_field:to_field> | --copy=<from_field:to_field>
   <number>     ::= -n <number> | --number=<number>

The default input file name is \'Afpx.xml' and the default output is to
overwrite the input.

The descriptor where to perform the operations must be specified.

Action is (one at a time):

* to insert <number> fields after <field_num>,

* or to delete <number> fields from <field_num> included,

* or to move <number> fields from <from_field> included to after <to_field>,

*  or to copy <number> fields from <from_field> included to after <to_field>.

By default, afpx_rnb does not allow to delete a field if its number is
referenced somewhere else in the descriptor. The <force> option overwrites this
security (and leads reference to bu updated as '${Field_0...}'.

.Examples

* Insert a field as first of descriptor 4: afpx_rnb -D 4 -i 0

* Delete fields 4 to 6 of descriptor 1: afpx_rnb -D 1 -d 3

