\input texinfo.tex    @c -*-History-*-
@c %**start of header
@setfilename HISTORY
@settitle HISTORY
@c %**end of header

@c Constants
@set name Repository list
@c General format
@paragraphindent none
@exampleindent 0

@c Title and front page
@node Top
@ifhtml
@center @titlefont{@value{name}}
@end ifhtml
@ifnothtml
@top @center @value{name}
@end ifnothtml

Packages are rated from 1 (simple) to 3 (very complex), on subjective criteria.

@table @asis
@item ada_parser (2)
Parses a text input flow, identifies ada lexical elements.
@item ada_words (2)
Basic ada parsic of delimiters, separators and reserved words.
@item address_ops (1)
Add, sub and returns image of a System.Address.
@item afpx (3)
Graphic (text oriented) manager of input screens that are off-line defined.
@item afpx_bld (2)
Process that compiles AFPX xml text description of screens.
@item any_def (1)
Definition of variant type that contains any value
@item arbitrary arbitrary-factors arbitrary-fractions (2)
Arbitrary precision operations, prime factor decomposition, fractions.
@item as as-b as-u as-u-utils (2)
Bounded and unbounded strings and associated packaging utilities
@item autobus (3)
Simple bus to excahnge strings between processes
@item loc_arg (1)
Program name and arguments extraction (based on keys).
@item argument_parser (2)
Parser of program arguments (based on keys and options).
@item assertion(1)
Raise exception or trace when assertion fails.
@item async_stdin (2)
Asynchronous reading and buffer of characters from input flow.
@item basic_proc (1)
Basic IO operations and exit code setting.
@item bit_ops (1)
Bit operations.
@item bloc_io (3)
Read/writes arrays of bytes from/to file.
@item byte_to_unicode (1)
Map a character (e.g. ISO-8859-xx) to unicode according to a xml-defined map.
@item c_nbres(1)
Complex numbers operations.
@item c_types (1)
Types for portable interfacing with C.
@item channels (2)
Diffuse messages to several destinations in TCP (channel) or IPM (bus).
@item char_to_hexa (1)
Converts a character to hexa ('A' -> 10...).
@item chronos (1)
Handle chronometers.
@item chronos.passive_timers (1)
Arm and check if timer has expired.
@item clear_screen (1)
Process that clears the screen.
@item command (2)
Uses Proc_Family to fork-exec and catch output and error flows.
@item computer (2)
Evaluates expressions based on numbers, variables, operations.
@item condition_manager (1)
Allow several tasks to wait until unblocked all together or one by one.
@item console (1)
ANSII management of text/cursor console.
@item control_pool (2)
Control exclusive access to data in a pool
@item convert (1)
Converts network <-> host integer.
@item copy_file (1)
Copy a file.
@item crc_10 (1)
Computes the CRC of strings (CRC is in 0 .. 3FF).
@item curve (3)
Draw a curve y=f(x) and points in 2D.
@item date_image (1)
String image "YYyy/Mm/Dd Hh:Mm:Ss.mmm" of a date.
@item day_mng (2)
Split/pack a duration into hours, minutes, seconds.
@item dir_mng (2)
Makes a dynamic list of directory content.
@item directory (2)
Change/read directory, dirname, basename...
@item door_manager (1)
Allow several tasks to wait until a given amount or waiters is reached.
@item dur_image (1)
Return string image of a duration rounded at N digits
@item dyn_data (2)
Allocate/free data from a pool.
@item environ (2)
Environment variable extraction and basic tests.
@item euro_franc (1)
Euro <-> Franc convertion.
@item event_mng (3)
Multiplex reception of events (timers, fd, signals).
@item exception_messenger (1)
Allow transmission of un-truncated exception message.
@item file_access (1)
Decode Unix file access flags.
@item file_hash (1)
Store the content of file (1 word per line) in a hashed dynlist.
@item forker (2)
API to a standalone (in C) forker process.
@item generic_con_io con_io big_con_io (3)
Console IOs (keyboard, mouse, screen) in text and graphic.
@item get_float (1)
Get a float or int from a string.
@item get_line (2)
Parses lines and words of file.
@item hash hashing (2)
Hash table storage of keyed data.
@item hashed_list (1)
Hashed access to a dynamic list of items
@item hashed_list.unique (1)
Hashed access to a dynamic list of items with unique keys.
@item http (2)
Fetch the content of a HTTP URL.
@item init_manager (1)
Manage atomic init of state while concurent update events are bufferized.
@item input_buffer (1)
Extract sentences from a flow of chars.
@item int_image mod_image integer_image (1)
Integer and modulus image (no leading space).
@item ip_addr (1)
Parse IP address or port.
@item limited_list dynamic_list (3)
Dynamic list of (limited) private objects, search/sort.
@item lower_char lower_str mixed_str upper_char upper_str (1)
Upper, lower, mixed string and character conversion.
@item many_strings (2)
Concatenates strings in string.
@item multiget (2)
Allows getting/ungetting items from an input flow.
@item mutex_manager (2)
Mutex for exclusive access or read/write access to shared data.
@item my_io bool_io flo_io int_io long_io (1)
Basic boolean/integer... IOs.
@item my_math (2)
Math library.
@item ndbm (1)
Interface to C ndbm library.
@item network (2)
Simulate a network of inter-connected nodes.
@item normal (1)
Normalize an integer image into fixed length string.
@item normalize_path (1)
Normalize a directory path (remove "/.", etc).
@item null_procedure (1)
Null (dummy) procedure.
@item num_letters (1)
Converts a number into english text.
@item num_match (1)
Checks if a number matches a range based criteria.
@item parser (2)
Parse a string, separate words and separators.
@item pattern (2)
Check a string versus several patterns.
@item perpet (2)
Perpetual calendar.
@item polygon_mng (2)
Line and polygone intersection.
@item prime_list (1)
List of prime numbers.
@item proc_family (2)
Fork/exec unix process.
@item property_def (1)
Definition of a Property type and array
@item protected_pool (1)
Store and retrieve data (by key) in a protected pool.
@item queues queues-timed (1)
Fifo, Lifo, Prio, Timed queues.
@item recurs (1)
Recursive operation on subdirs.
@item regex_filters (2)
Check a string vs chained regex criteria.
@item regular_expressions (2)
Check a string versus a regular expression.
@item rnd (1)
Random number generator.
@item romanic (1)
Decimal to romanic conversion (11 <-> XI).
@item round_at (1)
Round a float at a given position, before or after decimal.
@item schedule (1)
Allow task schduling (delay 0.0).
@item select_file (2)
Afpx-based file selection in a dir.
@item smart_reference (2)
Smart reference (automatic free).
@item socket (3)
Socket (Udp/Tpc/Tcp_Header, Afuix) operations.
@item socket_util (1)
General Set_Dest and Link of socket
@item sorts (2)
Sort array.
@item state_machine (2)
Generic state machine manager.
@item string_mng (2)
Various string utilites, including regexp and navigation.
@item sys_calls (2)
Various low level Unix calls
@item syslin (2)
Linear system (Gauss) resolver.
@item task_mng (2)
Calls a callback periodically.
@item tcp_util (3)
Automatic connect/accept Tcp connections, receive, send on them.
@item temp_file (2)
Create a temporary file.
@item text_char (2)
Get/unget chars from an input flow.
@item text_handler (1)
Storage of variable length strings.
@item text_line (2)
Get/put lines of text from/to a flow.
@item timeval (1)
Conversion from and to timeval structure.
@item timers (2)
Asynchronous timer management.
@item trace (1)
Tracing utility library.
@item trees (2)
Tree of items (father/childs) management.
@item u_rand (2)
Universal random number generator.
@item unbounded_arrays (1)
Handle unbounded generic arrays as Unbounded_String does.
@item unicode (1)
Definition of unicode numbers
@item unlimited_pool (2)
Simple pool of objects.
@item utf_16 (2)
Utf_16 encoding/decoding
@item utf_8 (2)
Utf_8 encoding/decoding
@item virtual_time (2)
Define virtual time that can shift, accelerate...
@item xml_parser (3)
Parser of Xml files or strings, including check of dtd.
@item xml_parser.generator (2)
Generate Xml output in flow/file/string.
@item x_mng(3)
Low level interface to X11 (txt, basic graphics, Mouse and keyboard).
@end table

@bye

