with Ada.Calendar;
with Day_Mng;
package Date_Text is

  -- The full definition of a date
  type Date_Rec is record
    Years     : Day_Mng.T_Years     := Day_Mng.T_Years'First;
    Months    : Day_Mng.T_Months    := Day_Mng.T_Months'First;
    Days      : Day_Mng.T_Days      := Day_Mng.T_Days'First;
    Hours     : Day_Mng.T_Hours     := Day_Mng.T_Hours'First;
    Minutes   : Day_Mng.T_Minutes   := Day_Mng.T_Minutes'First;
    Seconds   : Day_Mng.T_Seconds   := Day_Mng.T_Seconds'First;
    Millisecs : Day_Mng.T_Millisecs := Day_Mng.T_Millisecs'First;
    Microsecs : Day_Mng.T_Millisecs := Day_Mng.T_Millisecs'First;
  end record;

  -- The format string can contain:
  -- %Y : year on 4 digits
  -- %m : month number on 2 digits (01 to 12)
  -- %b : english abreviated month name on 3 digits, mixed case
  --      (Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec)
  -- %B : english full month name, mixed case (variable length)
  -- %d : day number in month on 2 digits
  -- %H : hours on 2 digits
  -- %M : minutes on 2 digits
  -- %S : seconds on 2 digits
  -- %s : milliseconds on 3 digits
  -- %u : microseconds on 3 digits (so usually after the millisecond)
  -- %% : the '%' character
  -- Other characters are output/scanned as such

  -- A format is not valid if
  -- -  it contains an unknown "%x" sequence
  -- - it ends with the character '%'
  -- - the "%B" sequence is immediately followed by another "%x" sequence
  --   (except "%%") or by a lower case letter

  -- Compute the lenght of text generated by a format
  -- Raise Invalid_Format if the format is not valid
  -- Raise Unknown_Length if the format is valid but refers to %B
  --  (variable length)
  function Length (Format : String) return Natural;

  -- Scan a String at a given Format
  -- Any field of Date_Rec that is not set n Format is set to its default
  -- Raise Invalid_Format if the format is not valid
  -- Raise Invalid_String if the string does not match the format or defines
  --  different values for the sale field
  function Scan (Str : String; Format : String) return Date_Rec;

  -- Put a date at a given format
  -- Raise Invalid_Format if the format is not valid
  function Put (Date : Date_Rec; Format : String) return String;

  -- Utilities to convert to/from Ada.Calendar.Time
  function Split (Date : Ada.Calendar.Time) return Date_Rec;
  function Pack  (Date : Date_Rec) return Ada.Calendar.Time;

  Invalid_Format, Invalid_String, Unknown_Length : exception;

end Date_Text;

