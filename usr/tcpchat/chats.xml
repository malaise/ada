<?xml version="1.0"?>
<!DOCTYPE chats SYSTEM "chats.dtd">
<!-- Example of TCP chat script, used for testing -->

<chats>
  <version Version="&Version;"/>
  <!-- HTTP 0.9: Send file -->
  <!-- HTTP 1.0 or 1.1: Skip noise, send header + file -->
  <chat Name="http" TimeoutMs="&None;" Regexp="true"
        Assign="File=${4} Vers=${5}"
        >GET ((http:/)?/(localhost|${$HOSTNAME}))?([^ ]+)( +HTTP/1\.(0|1))?</chat>
  <script>
    <cond>
      <if Variable="Vers"></if>
      <!-- No vers => 0.9 -->
      <script></script>
      <else/>
      <script>
        <!-- Vers 1.x => skip inputs until empty line -->
        <set Variable="Done">false</set>
        <repeat>
          <while Variable="Done">false</while>
          <script>
            <select TimeoutMs="1000">
              <expect></expect>
              <script>
                <set Variable="Done">true</set>
              </script>
              <default/>
              <script></script>
            </select>
          </script>
        </repeat>
        <!-- And send header -->
        <eval Variable="Size">
          <command>ls -al ${File} | awk '{printf "%s",$5\}'</command>
          <error/>
          <script>
            <set Variable="Size"></set>
          </script>
        </eval>
        <cond>
          <if Variable="Size"></if>
          <script>
            <send>HTTP/1.0 404 Not Found</send>
            <close/>
          </script>
        </cond>
        <eval Variable="Date">
          <command>echo -n `date "+%a, %d %b %Y %H:%M:00 %Z"`</command>
        </eval>
        <set Variable="Server_Id">tcpchat/V&Version;</set>
        <send>HTTP/1.0 200 OK</send>
        <send>Date: ${Date}</send>
        <send>Server: ${Server_Id}</send>
        <send>Connection: close</send>
        <send>Accept-Ranges: bytes</send>
        <send>Content-Length: ${Size}</send>
        <send>Content-Type: text/plain</send>
        <send></send>
      </script>
    </cond>
    <call>
      <command>cat ${File}</command>
      <error/>
      <script>
        <cond>
          <if Variable="Vers"></if>
          <script></script>
          <else/>
          <script>
            <send>HTTP/1.0 404 Not Found</send>
          </script>
      </cond>
      </script>
    </call>
    <close/>
  </script>

  <!-- Tcping: Send pong or tcpong. Remain connected -->
  <chat Name="tcping" TimeoutMs="1_000" Regexp="true"
        Assign="Tc=${1}">(tc)?ping</chat>
  <script>
    <send NewLine="false">${Tc}pong</send>
  </script>

  <!-- TEST wait then close -->
  <chat Name="testWaitClose">close</chat>
  <script>
    <wait DelayMs="1000"/>
    <close/>
  </script>

  <!-- TEST simulate a ppp login chat user side -->
  <chat Name="testPpp1">ppp1</chat>
  <script>
    <send>AT</send>
    <read TimeoutMs="5_000">OK</read>
    <send>ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0</send>
    <read TimeoutMs="5_000">OK</read>
    <send>ATDT0860922000</send>
    <select TimeoutMs="60_000">
      <expect Regexp="true">BUSY|ERROR|NO CARRIER|VOICE|NO DIAL ?TONE|NO ANSWER|DELAYED</expect>
      <script>
        <close/>
      </script>
      <expect Regexp="true">CONNECT( [0-9]+)?</expect>
      <script>
        <read TimeoutMs="30_000"Regexp="true">.ogin</read>
        <send>malaise</send>
        <read TimeoutMs="10_000" Regexp="true">.{4\}word</read>
        <send>${$PASSWORD}</send>
        <send>Working: Please wait...</send>
        <wait DelayMs="5_000"/>
        <send>Done. Please logout.</send>
        <read TimeoutMs="10_000">logout</read>
        <close/>
      </script>
    </select>
  </script>

  <!-- TEST simulate a ppp login chat modem side -->
  <chat Name="testPpp2">ppp2</chat>
  <script>
    <read>AT</read>
    <send>OK</send>
    <read>ATQ0 V1 E1 S0=0 &amp;C1 &amp;D2 +FCLASS=0</read>
    <send>OK</send>
    <read>ATDT0860922000</read>
    <wait DelayMs="21_000"/>
    <send>CONNECT 56000</send>
    <wait DelayMs="10_000"/>
    <send>login</send>
    <read>malaise</read>
    <send>password</send>
    <read>${$PASSWORD}</read>
    <send>Working: Please wait...</send>
    <wait DelayMs="5_000"/>
    <send>Done. Please logout.</send>
    <read TimeoutMs="10_000">logout</read>
    <close/>
  </script>

  <!-- TEST multiple select -->
  <chat Name="testMulti"
        InputDefaultTimeoutMs="None">testMulti</chat>
  <script>
    <send></send>
    <select>
      <expect>login</expect>
      <script>
        <send>me</send>
        <select>
          <expect>password</expect>
          <script>
            <send>pass</send>
          </script>
          <expect>PASSWORD</expect>
          <script>
            <send>PASS</send>
          </script>
          <default/>
          <script>
            <close/>
          </script>
        </select>
        <wait DelayMs="10"/>
        <send>ls</send>
      </script>
      <expect>LOGIN</expect>
      <script>
        <send>ME</send>
        <read>PASSWORD</read>
        <send>PASS</send>
      </script>
    </select>
    <wait DelayMs="1_000"/>
    <close/>
  </script>

  <!-- TEST a login -->
  <chat Name="login" TimeoutMs="60_000">login</chat>
  <script>
    <set Variable="Count">0</set>
    <set Variable="Res">try</set>
    <repeat>
      <while Variable="Res">try</while>
      <script>
        <!-- Get login and password, set RES=loggedin if OK -->
        <send>login:</send>
        <read Regexp="true" Assign="User=${0}">.*</read>
        <send>password:</send>
        <read Regexp="true" Assign="Passwd=${0}">.*</read>
        <cond>
          <if Variable="User">malaise</if>
          <script>
            <cond>
              <if Variable="Passwd">${$PASSWORD}</if>
              <script>
                <set Variable="Res">success</set>
              </script>
            </cond>
          </script>
        </cond>
        <!-- Increment counter if not OK, failed if maximum reached -->
        <cond>
          <if Variable="Res">try</if>
          <script>
            <set Variable="Count" Compute="true">${Count}+1</set>
            <cond>
              <if Variable="Count">5</if>
              <script>
                <set Variable="Res">failure</set>
              </script>
            </cond>
          </script>
        </cond>
      </script>
    </repeat>
    <!-- Put result -->
    <cond>
      <if Variable="Res">success</if>
      <script>
        <send>User ${User} logged in</send>
        <log>User ${User} logged in</log>
      </script>
      <else/>
      <script>
        <send>Login failed</send>
        <log>Login failed</log>
        <set Variable="User"></set>
         <close/>
      </script>
    </cond>
  </script>

  <!-- TEST a logout -->
  <chat Name="logout">logout</chat>
  <script>
    <cond>
      <if Variable="User" IfUnset="true"></if>
      <script></script>
      <else/>
      <script>
        <send>User ${User} logged out</send>
        <log>User ${User} logged out</log>
      </script>
    </cond>
    <wait DelayMs="500"/>
    <close/>
  </script>

  <!-- TEST an indirection ($$) -->
  <chat Name="Indirect">indirect</chat>
  <script>
    <set Variable="V1">Content1</set>
    <set Variable="V2">Content2</set>
    <select TimeoutMs="1_000">
      <expect Regexp="true" Assign="Index=${0}">.*</expect>
      <script>
        <assign>
          <expression Variable="Index" Compute="true">${Index}+1</expression>
          <error/>
          <script>
            <send>ERROR</send>
            <wait DelayMs="100"/>
            <close/>
          </script>
        </assign>
        <assign>
          <expression Variable="Result">${V${Index}}</expression>
          <error/>
          <script>
            <send>ERROR</send>
            <wait DelayMs="100"/>
            <close/>
          </script>
        </assign>
        <send>${Result}</send>
      </script>
      <default/>
      <script>
        <send>IMPOSSIBLE</send>
      </script>
      <timeout/>
      <script>
        <send>TIMEOUT</send>
      </script>
    </select>
    <close/>
  </script>

  <!-- TEST an error handler of chdir -->
  <chat Name="error1">error1</chat>
  <script>
    <chdir>
      <dir>Unknown</dir>
      <error/>
      <script>
        <send>error-handler-1</send>
      </script>
    </chdir>
    <wait DelayMs="500"/>
    <close/>
  </script>

  <!-- TEST an error handler of chdir -->
  <chat Name="error2">error2</chat>
  <script>
    <chdir>
      <dir>Unknown</dir>
      <error/>
      <script>
        <send>error-handler-2</send>
      </script>
    </chdir>
    <send>after-error-2</send>
    <wait DelayMs="500"/>
    <close/>
  </script>

  <!-- TEST the parse instruction -->
  <chat Name="parse" Regexp="true" Assign="STR=${1}">parse ?(.*)</chat>
  <script>
    <parse Compute="true"
           Expr="${STR}"
           Assign="V1=${1} V2=${3} V3=${5} V4=${7} V5=${9}"
           >([^ ]*)( ([^ ]*))?( ([^ ]*))?( ([^ ]*))?( ([^ ]*))?.*</parse>
    <!-- Loop on all non empty Vi or up to V5 -->
    <set Variable="Index">0</set>
    <set Variable="Max">5</set>
    <set Variable="Done">false</set>
    <repeat>
      <while Variable="Done">false</while>
      <script>
        <set Variable="Index" Compute="true">${Index}+1</set>
        <set Variable="Res">${V${Index}}</set>
        <cond>
          <if Variable="Res"></if>
          <script>
            <!-- Vi is empty -->
            <set Variable="Done">true</set>
          </script>
          <else/>
          <script>
            <send>${Res}</send>
          </script>
        </cond>
        <cond>
          <if Variable="Index">${Max}</if>
          <script>
            <!-- Max is reached -->
            <set Variable="Done">true</set>
          </script>
        </cond>
      </script>
    </repeat>
    <close/>
  </script>

</chats>

