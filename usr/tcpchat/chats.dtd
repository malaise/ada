<?xml version="1.0" encoding="UTF-8"?>
<!-- DTD of a chats file of tcpchat -->

<!ENTITY Version "4.0">

<!-- Common attributes -->
<!-- A Boolean -->
<!ENTITY % boolean "(true|false)">
<!-- A timeout definition -->
<!ENTITY % TimeoutMs "TimeoutMs CDATA #IMPLIED">
<!-- No timeout -->
<!ENTITY None "None">

<!-- Checks: An expression or input is checked versus a criteria -->
<!-- Possible evaluation of expression and criteria (input strings are -->
<!--  never evaluated): no expansion, variable resolution or integer -->
<!-- computation -->
<!ENTITY % Evaluate "(none|resolve|compute) 'resolve'">
<!-- Possible operations: equal or not, regex match or not, less than... -->
<!-- Equality and matching for strings and resolution, equality and -->
<!-- relative comparisons for computed expressions -->
<!ENTITY % Operations "(equal|not_equal|match|not_match|less|greater
                       |less_equal|greater_equal)">
<!ENTITY % Operation "%Operations; 'equal'">
<!-- A condition, for selection of a chat, select, read, -->
<!--  or for comparision with an expression -->
<!ENTITY % Condition "
   Crit CDATA #REQUIRED
   Oper %Operation;
   Eval %Evaluate;">
<!-- Assign variables from regexp substrings -->
<!ENTITY % Assign "Assign CDATA #IMPLIED">
<!-- An expression, possibly containing reference to variables -->
<!ENTITY % Expression "Expr CDATA #REQUIRED">
<!-- Assign a variable -->
<!ENTITY % SetVar "Var CDATA #REQUIRED
                   Eval %Evaluate;
                   OnlyIfNotSet %boolean; 'false'">
<!-- A subscript -->
<!ENTITY % Script "((select|cond|while|read|skip|wait|send|call|set|assign
                    |parse|eval|chdir|log)*,close?)">


<!-- The chats set -->
<!ELEMENT chats (chat+)>
<!-- The version of the chats script -->
<!ATTLIST chats Version CDATA #REQUIRED>

<!-- A chat -->
<!ELEMENT chat %Script;>
<!ATTLIST chat Name ID #REQUIRED
               %Condition;
               %Assign;
               %TimeoutMs;
               InputDefaultTimeoutMs CDATA #IMPLIED>

<!-- The select statement (select a subscript depending on input) -->
<!ELEMENT select (expect+,default?,timeout?)>
<!ATTLIST select %TimeoutMs;>
<!ELEMENT expect %Script;>
<!ATTLIST expect %Condition; %Assign;>
<!ELEMENT default %Script;>
<!ELEMENT timeout %Script;>

<!-- The cond statement (if, elsif... else) -->
<!ELEMENT cond (if,elsif*,else?)>
<!ELEMENT if %Script;>
<!ATTLIST if %Expression; %Condition;>
<!ELEMENT elsif %Script;>
<!ATTLIST elsif %Expression; %Condition;>
<!ELEMENT else %Script;>

<!-- The while statement (repeat while condition) -->
<!ELEMENT while %Script;>
<!ATTLIST while %Expression; %Condition;>

<!-- The read statement (read from input) -->
<!ELEMENT read EMPTY>
<!ATTLIST read %TimeoutMs; %Condition; %Assign;>

<!-- The skip statement (skip an input) -->
<!ELEMENT skip EMPTY>
<!ATTLIST skip %TimeoutMs;>

<!-- The wait statement (wait some tome) -->
<!ELEMENT wait EMPTY>
<!ATTLIST wait DelayMs CDATA #REQUIRED>

<!-- The send statement (write on output) -->
<!ELEMENT send (#PCDATA)>
<!ATTLIST send NewLine %boolean; "true">

<!-- The call statement (call shell) -->
<!ELEMENT call (command,error?)>
<!ELEMENT command (#PCDATA)>
<!ELEMENT error %Script;>

<!-- The eval statement (set variable from shell output) -->
<!ELEMENT eval (command,error?)>
<!ATTLIST eval %SetVar;>

<!-- The set statement (set variable to value) -->
<!ELEMENT set EMPTY>
<!ATTLIST set %SetVar; %Expression;>

<!-- The assign statement (same as set but catches evaluation errors) -->
<!ELEMENT assign (error?)>
<!ATTLIST assign %SetVar; %Expression;>

<!-- The parse statement (parse an expression into variables) -->
<!ELEMENT parse EMPTY>
<!ATTLIST parse %Expression;
                Crit CDATA #REQUIRED
                Eval %Evaluate;
                Assign CDATA #REQUIRED>

<!-- The chdir statement (change current dir) -->
<!ELEMENT chdir (error?)>
<!ATTLIST chdir Dir CDATA #REQUIRED>

<!-- The log statement (log some trace) -->
<!ELEMENT log (#PCDATA)>

<!-- The close statement (close current chat script) -->
<!ELEMENT close EMPTY>

