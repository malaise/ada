#!/bin/bash

export DICTIO_Debug=Y

if [ "$DICTIO_Debug" = "Y" ] ; then
# These ones generate few traces
export dictio_TRACE_Status=Debug
export dictio_TRACE_Fight=Debug
export dictio_TRACE_Sync=Debug
export dictio_TRACE_Online=Debug
export dictio_TRACE_Client=Debug
fi

# These ones generate many traces
#export dictio_TRACE_Client_Data=Debug
#export dictio_TRACE_CLIENT_Notify=Debug
#export dictio_TRACE_CLIENT_Alias=Debug
#export dictio_TRACE_Intra=Debug

# These ones are not debug
# Flow control on LAN during sync
export DICTIO_DELAY_PER_KB=0.021
# Delay after which master is stable
export DICTIO_STABLE_DELAY=0.200
# Default prio
export DICTIO_PRIO=10

# Parse args
while [ "$1" != "" ] ; do
  if [ "$1" = "-p" ] ; then
    shift
    export DICTIO_PRIO=$1
    shift
  elif [ "$1" = "-d" ] ; then
    export  DICTIO_LAUNCHER=gvd
    shift
  else
    echo "Usage: `basename $0` [ -p <prio> ]"
    exit 1
  fi
done

export BUS="234.7.6.5:21021"

# Set client port
export HOST=`uname -s`
if [ "$HOST" = "Linux" ] ; then
  export PORT=fido
elif [ "$HOST" = "OSF1" ] ; then
  export PORT=rdg
else
  echo "Unknown host type: $HOST"
  exit 1
fi

# Clean previous Afunix socket if any
SOK=`grep -E "^$PORT[[:blank:]]" /etc/services | awk '{print $2; exit}' \
| cut -d '/' -f1`
if [ -z "$SOK" ] ; then
  SOK=$PORT
fi
SOK=/tmp/.socket_afux/$SOK
if [ -S "$SOK" ] ; then
  echo Cleaning afunix socket $SOK
  rm $SOK
fi

if [ -z "$DICTIO_LAUNCHER" ] ; then
  DICTIO_LAUNCHER=exec
elif [ "$DICTIO_LAUNCHER" = "gvd" ] ; then
  echo Debugging ./dictio -b$BUS -p$PORT -P$DICTIO_PRIO
fi

${DICTIO_LAUNCHER} ./dictio -b$BUS -p$PORT -P$DICTIO_PRIO

