#!/bin/bash

export DICTIO_DEBUG=Y

if [ "$DICTIO_DEBUG" = "Y" ] ; then
# These ones generate few traces
export DICTIO_TRACE_STATUS=DEBUG
export DICTIO_TRACE_FIGHT=DEBUG
export DICTIO_TRACE_SYNC=DEBUG
export DICTIO_TRACE_ONLINE=DEBUG
export DICTIO_TRACE_CLIENT=DEBUG
fi

# These ones generate many traces
#export DICTIO_TRACE_CLIENT_DATA=DEBUG
#export DICTIO_TRACE_CLIENT_NOTIFY=DEBUG
#export DICTIO_TRACE_CLIENT_ALIAS=DEBUG
#export DICTIO_TRACE_INTRA=DEBUG

# These ones are not debug
# Flow control on LAN during sync
export DICTIO_DELAY_PER_KB=0.021
# Delay after which master is stable
export DICTIO_STABLE_DELAY=0.200
# Default prio
export DICTIO_PRIO=10
# Default mode
export MODE=bus

# Parse args
while [ "$1" != "" ] ; do
  if [ "$1" = "-p" ] ; then
    shift
    export DICTIO_PRIO=$1
    shift
  elif [ "$1" = "-b" ] ; then
    export MODE=bus
    shift
  elif [ "$1" = "-c" ] ; then
    export MODE=channel
    shift
  else
    echo "Usage: `basename $0`   [ -b | -c ]   [ -p <prio> ]"
    exit 1
  fi
done

# Set dictio channel
if [ "$MODE" = "channel" ] ; then
  export CHANNEL="-ntest_tcp -cdictio.xml"
else
  export CHANNEL="-ntest_udp -btest_ipm"
fi

# Set client port
export HOST=`uname -s`
if [ "$HOST" = "Linux" ] ; then
  export PORT=fido
elif [ "$HOST" = "OSF1" ] ; then
  export PORT=rdg
else
  echo "Unknown host type: $HOST"
  exit 1
fi

# Clean previous Afunix socket if any
SOK=`grep -E "^$PORT[[:blank:]]" /etc/services | awk '{print $2}' \
| cut -d '/' -f1`
if [ -z "$SOK" ] ; then
  SOK=$PORT
fi
SOK=/tmp/.socket_afux/$SOK
if [ -S "$SOK" ] ; then
  echo Cleaning afunix socket $SOK
  rm $SOK
fi

if [ -z "$DICTIO_LAUNCHER" ] ; then
  DICTIO_LAUNCHER=exec
elif [ "$DICTIO_LAUNCHER" = "gvd" ] ; then
  GVOPT=--pargs
fi

${DICTIO_LAUNCHER} ./dictio $GVOPT $CHANNEL -p$PORT -P$DICTIO_PRIO

