with TEXT_IO;
with ARGUMENT;
with POINTS, POINT_STR, FILE;

procedure EXPORT is

  ASCII_FILE : TEXT_IO.FILE_TYPE;

  procedure ERROR (MSG : in STRING)  is
  begin
    TEXT_IO.PUT_LINE ("ERROR: " & MSG);
    TEXT_IO.PUT_LINE ("Usage: " & ARGUMENT.GET_PROGRAM_NAME & " <src_approx_file> <dst_ascii_file>");
  end ERROR;

begin

  if ARGUMENT.GET_NBRE_ARG /= 2 then
    ERROR ("Invalid arguments");
    return;
  end if;

  begin
    begin
      TEXT_IO.OPEN (ASCII_FILE, TEXT_IO.IN_FILE, ARGUMENT.GET_PARAMETER(OCCURENCE => 2));
      ERROR ("File " & ARGUMENT.GET_PARAMETER(OCCURENCE => 2) & " exists");
      return;
    exception
      when TEXT_IO.NAME_ERROR =>
        TEXT_IO.CREATE (ASCII_FILE,  TEXT_IO.OUT_FILE, ARGUMENT.GET_PARAMETER(OCCURENCE => 2));
    end;
  exception
    when others =>
      ERROR ("Cannot create file " & ARGUMENT.GET_PARAMETER(OCCURENCE => 2));
      return;
  end;

  declare
    THE_POINTS : constant POINTS.P_T_THE_POINTS
               := FILE.F_READ(ARGUMENT.GET_PARAMETER(OCCURENCE => 1));
  begin

    TEXT_IO.PUT_LINE (ASCII_FILE, "# Generated by approx export");
    for I in THE_POINTS'RANGE loop
      TEXT_IO.PUT_LINE (ASCII_FILE, POINT_STR.COORDINATE_IMAGE(THE_POINTS(I).X) & "  "  &
                                    POINT_STR.COORDINATE_IMAGE(THE_POINTS(I).Y));
    end loop;
    TEXT_IO.CLOSE (ASCII_FILE);
    TEXT_IO.PUT_LINE ("Done.");
    
  exception
    when FILE.F_ACCESS_ERROR =>
      ERROR ("Cannot open file " & ARGUMENT.GET_PARAMETER(OCCURENCE => 1));
      TEXT_IO.DELETE (ASCII_FILE);
      return;
    when FILE.F_IO_ERROR =>
      ERROR ("Reading file " & ARGUMENT.GET_PARAMETER(OCCURENCE => 1));
      TEXT_IO.DELETE (ASCII_FILE);
      return;
  end;

end EXPORT;

