#!/bin/bash
export N0=0
export N1=0
export NE=0
export PID=$$

export T_ALS=t_als
export TMP=Tmp
function clean {
  rm -f BrokenLink exp res err NewFile tmp/$T_ALS tmp A B C
  rm -rf $TMP
}
trap 'echo ""; clean; exit 1' SIGINT SIGTERM

if [ "$1" = "clean" ]  ; then
  clean
  exit 0
fi

function error {
  echo ""
  echo "ERROR: $*." 1>&2
  kill -SIGKILL $PID
  exit 1
}

function title {
  echo -n "$1: "
}

function launch {
  als $*
  if [ $? -eq 2 ] ; then
    error "als $* has failed"
  fi
}

# Compare ls and als -F + -D + -L + -O nb of entries
function do_dir {
  title "In $1, ls v.s. als -FDLO"
  let LSN=0
  let ALSF=0
  let ALSD=0
  let ALSL=0
  let ALSO=0
  let ALSN=0

  # Check dir is readable
  ls -1 $1 > /dev/null 2>&1
  if [ $? -eq 2 ] ; then
    echo "Skipped"
    return
  fi

  export LSN=`ls -1 $1 | wc -l`

  export ALSOPTS="-1 --dir-name=never"
  export ALSF=`launch $ALSOPTS -F $1 | wc -l`
  export ALSD=`launch $ALSOPTS -D $1 | wc -l`
  export ALSL=`launch $ALSOPTS -L $1 | wc -l`
  export ALSO=`launch $ALSOPTS -O $1 | wc -l`

  let ALSN=$ALSF+$ALSD+$ALSL+$ALSO

  if [ $LSN -ne $ALSN ] ; then
    error "ls finds $LSN entries while als finds $ALSN"
  fi
  echo "OK"
}

# Compare ls and als in some dirs
do_dir .
do_dir ${HOME}
for dir in `als -DM --exclude="proc" /` ; do
  do_dir $dir
done

# Compare als -R --no-name and als -RM
title "In ., dir-name=never v.s. merge"
export ALSRN=`launch -R  -1 --dir-name=never | wc -l`
export ALSMN=`launch -RM -1 | wc -l`
if [ $ALSRN -ne $ALSMN ] ; then
  error "als -R --dir-name=never finds $ALSRN entries while als -RM finds $ALSMN"
fi
echo "OK"

# Output format
title "In ., output format"
echo "Test" >exp
launch Test >res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als Test result res differs from exp"
fi

echo "./Test" >exp
launch ./Test >res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als Test result res differs from exp"
fi

launch ./Test | grep Test >res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als Test result res differs from exp"
fi

echo "OK"

# Find a broken link
title "In ., recursive broken links"
N0=`launch -BRM | wc -l`
ln -fs bRoKeNlInK BrokenLink
N1=`launch -BRM | wc -l`
rm BrokenLink
let NE=$N0+1
if [ $N1 -ne $NE ] ; then
  error "als -BRM finds $N1 instead of $NE broken links"
fi
echo "OK"

# Match dir pattern and file regexp
title "In lib*, match regexp *.o and"
ls -1 lib/*.o > exp
launch -M --match-dir="lib*" -m "@.*\.o" * > res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als -M --match-dir='lib*' -m '@.*\.o' * result res differs from exp"
fi
rm exp res
echo "OK"

# Exclude file regexp
title "In lib, exclude regexp *.ali"
ls -1 lib/*.o > exp
launch -M -e "@.*\.ali" lib > res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als -M -e '@.*\.ali' lib result res differs from exp"
fi
rm exp res
echo "OK"

# Access rights
title "In ., executables and not readable"
echo "als  als.stat  lib  Test" > exp
als -e "AdaCtl" --access='**x' > res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als --access=**x result res differs from exp"
fi

touch NewFile
chmod -r NewFile
echo "NewFile" > exp
als --access='-**' > res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als --access=-** result res differs from exp"
fi

rm exp res NewFile
echo "OK"

title "In ., new file"
export DELAY=2s
touch NewFile
result=`launch -n $DELAY`
if [ "$result" != "NewFile" ] ; then
  error "als -n $DELAY finds $res i.o. NewFile"
fi
rm NewFile
echo "OK"

# Long output
title "In ., long format and date-iso"
result=`launch -l --date-iso als | sed -r 's/ +/ /g'`
exp=`ls -l --time-style="+%Y-%m-%dT%H:%M:%S" als | cut -d ' ' -f 1,3-`
if [ "$result" != "$exp" ] ; then
  error "als -l --date-iso is $result i.o. $exp"
fi
echo "OK"

# Long output in UTC
title "In ., long format and date-iso in UTC"
result=`launch -lU --date-iso als | sed -r 's/ +/ /g'`
exp=`TZ=UTC ls -l --time-style="+%Y-%m-%dT%H:%M:%S" als | cut -d ' ' -f 1,3-`
if [ "$result" != "$exp" ] ; then
  error "als -lU --date-iso is $result i.o. $exp"
fi
echo "OK"

# Sort by size
title "In ., reverse sort by size"
result=`launch -sr1 | tail -1`
if [ "$result" != "als.stat" ] ; then
  error "als -sr1 last line is $result i.o. als.stat"
fi
echo "OK"

# Sort by date
title "In ., reverse sort by date"
touch NewFile
result=`launch -tr1 | tail -1`
if [ "$result" != "NewFile" ] ; then
  error "als -tr1 last line is $result i.o. NewFile"
fi
rm NewFile
echo "OK"

# Follow links
title "Follow links"
ln -s /tmp tmp
touch tmp/$T_ALS
result=`launch -RM --show-targets 2>err | grep $T_ALS`
if [ "$result" != "" ] ; then
  error "als --show-targets has followed links"
fi
result=`als -RM --follow-links 2>err | grep $T_ALS`
if [ "$result" != "/tmp/$T_ALS" ] ; then
  error "als --follow-links  has not followed link"
fi
rm tmp/$T_ALS
rm tmp
echo "OK"

# Show Targets
title "Show targets"
ln -s als A
ln -s A B
ln -s B C
result=`launch -l C | awk '{print $9}'`
if [ "$result" != "B" ] ; then
  error "als has not shown direct link"
fi
result=`launch -l --show-targets C | awk '{print $9}'`
if [ "$result" != "als" ] ; then
  error "als --show-targets has not shwon target link"
fi
rm A B C
echo "OK"

# Broken links in subdir
title "Broken links"
mkdir $TMP
cd $TMP
touch Dst
ln -s Dst Lnk
ln -s NoDst Broken
cd ..
echo -en "$TMP:\nBroken\n" >exp
launch -RB >res
cmp res exp > /dev/null 2>&1
if [ $? -ne 0 ] ; then
  error "als -RB has not shown broken link"
fi
rm -rf $TMP
echo "OK"

# Dates
title "Between dates"
sleep 2
Date1=`date  +"%Y-%m-%dT%H:%M:%S"`
touch $TMP
sleep 1
Date2=`date  +"%H:%M:%S"`
sleep 0.5
result1=`launch -n "$Date1" -d lt"$Date2"`
result2=`launch -n 3s -o 1s`
if [ "$result1" != "$TMP" ] ; then
  error "als -n $Date1 -d lt$Date2 has shown $result1"
fi
if [ "$result2" != "$TMP" ] ; then
  error "als -n 3s -o 1s has shown $result2"
fi
rm $TMP
echo "OK"

clean

