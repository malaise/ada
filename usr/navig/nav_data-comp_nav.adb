separate (NAV_DATA)

-- When PLAN.ANGLE and TRAJ.SPEED are unknown
procedure COMP_NAV (DATA : in out T_DATA) is
  R : REAL;
  CW, CP : REAL;
  use NAV_TYPES;
begin
  -- PLAN.ANGLE := TRAJ.ANGLE - ARC_SIN (WIND.SPEED / PLAN.SPEED
  --  * SIN (WIND.ANGLE - TRAJ.ANGLE)
  R := MY_MATH.SIN (TO_REAL(ANGLE =>DATA.WIND.ANGLE - DATA.TRAJ.ANGLE),
   MY_MATH.DEGREE);
  R := MY_MATH.ARC_SIN (
        MY_MATH.REAL(DATA.WIND.SPEED) / MY_MATH.REAL(DATA.PLAN.SPEED) * R,
        MY_MATH.DEGREE);
  DATA.PLAN.ANGLE := DATA.TRAJ.ANGLE - TO_ANGLE (R);

  -- TRAJ.SPEED := WIND.SPEED * COS(TRAJ_ANGLE - WIND_ANGLE) +
  --  PLAN.SPEED * COS(PLAN.ANGLE - TRAJ_ANGLE)
  CW := MY_MATH.COS(TO_REAL(ANGLE => DATA.TRAJ.ANGLE - DATA.WIND.ANGLE),
   MY_MATH.DEGREE);
  CP := MY_MATH.COS(TO_REAL(ANGLE => DATA.PLAN.ANGLE - DATA.TRAJ.ANGLE),
   MY_MATH.DEGREE);
  DATA.TRAJ.SPEED := NAV_TYPES.T_SPEED (MY_MATH.REAL(DATA.WIND.SPEED) * CW
                                      + MY_MATH.REAL(DATA.PLAN.SPEED) * CP);
exception
  when MY_MATH.MATH_ERROR => raise COMP_ERR;
end COMP_NAV;
