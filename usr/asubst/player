#!/bin/bash
#set -vx
if [ "$1" = "" ] ; then
  echo "Usage: `basename $0` <scenario>"
  exit 1
fi
export SCENARIO=$1

# Read field $2 of line $1
function readarg {
res="`awk -vLINE=$1 -vFIELD=$2 -F '"' '
  BEGIN {
    NL=0
    FIELD=2*FIELD
  }
  (NF == 0 || $1 ~ /^#/) {
    # Skip empty lines and comment
    next
  }
  {
    # Count significant lines
    NL=NL+1
    if (NL == LINE) {
      printf "%s",$(FIELD)
      exit 0
    }
  } 
' $SCENARIO`"
echo "$res"
}

#Initially no option
export opt=""
# For each line
let L=1
while true ; do
  # Read line until end of file
  export input=`readarg $L 1`
  if [ "$input" = "" ] ; then
    break
  fi
  if [ "$input" = "Options" ] ; then
    export opt1=`readarg $L 2`
    export opt2=`readarg $L 3`
    export opt3=`readarg $L 4`
  else
    export search=`readarg $L 2`
    export replace=`readarg $L 3`
    export expected=`readarg $L 4`
    rexpected=`echo -e -n "$expected"`
    # Do test and save exit status
    if [ "$opt1" != "" ] ; then
    echo "echo \"$input\" | asubst $opt1 $opt2 $opt3 \"$search\" \"$replace\" -> $expected"
      result=`echo -e -n "$input" | asubst $opt1 $opt2 $opt3 "$search" "$replace"`
    else
      echo "echo \"$input\" | asubst $opt \"$search\" \"$replace\" -> $expected"
      result=`echo -e -n "$input" | asubst "$search" "$replace"`
    fi
    code=$?
    export result
    # Check exit status
    if [ $code -eq 2 ] ; then
      echo "Error: asubst exited with code $code"
      exit 1
    fi
    # Check that result is expected
    if [ "$result" != "$rexpected" ] ; then
      echo "Error: expected $rexpected != got $result"
      exit 1
    fi
  fi
  let L=$L+1
done
echo Done.
exit 0

