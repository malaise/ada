#!/bin/bash
#set -vx
if [ "$1" = "" ] ; then
  echo "Usage: `basename $0` <scenario>"
  exit 1
fi
export SCENARIO=$1

# Default delimiter is '"'
export DELIMITER="\""

#Initially no option
export opt=""

# For each line
while IFS="$DELIMITER" read -r f a1 d a2 d a3 d a4 d ; do
  if [[ $f =~ ^# ]] ; then
     continue
  fi
  if [[ $f$a1 =~ ^$ ]] ; then
     continue
  fi
  export input="$a1"
  if [ "$input" = "Delimiter" ] ; then
    DELIMITER="$a2"
    echo "Delimiter $DELIMITER"
  elif [ "$input" = "Options" ] ; then
    export opt1="$a2"
    export opt2="$a3"
    export opt3="$a4"
  else
    export search="$a2"
    export replace="$a3"
    export expected="$a4"
    if [ \( -z "$input" \) -a \( -z "$search" \) ] ; then
      break
    fi
    mapfile mexpected < <(echo -e -n "$expected")
    rexpected="${mexpected[@]}"
    # Do test and save exit status
    if [ "$opt1" != "" ] ; then
      echo "echo -en \"$input\" | asubst $opt1 $opt2 $opt3 \"$search\" \"$replace\" -> $expected"
      mapfile mresult< <(echo -en "$input" | asubst $opt1 $opt2 $opt3 "$search" "$replace")
    else
      echo "echo -en \"$input\" | asubst \"$search\" \"$replace\" -> $expected"
      mapfile mresult< <(echo -en "$input" | asubst "$search" "$replace")
    fi
    code=$?
    export result="${mresult[@]}"
    # Check exit status
    if [ $code -eq 2 ] ; then
      echo "Error: asubst exited with code $code"
      exit 1
    fi
    # Check that result is expected
    if [ "$result" != "$rexpected" ] ; then
      echo "Error: expected >$rexpected< != got >$result<"
      exit 1
    fi
  fi
done <$SCENARIO

echo Done.
exit 0

