#!/bin/bash
# set -vx

export ENIGMA_CONF_FILE=enigma.xml
export DATA=data

function clean {
  rm -f tmp tmpc tmpd
}
trap 'echo ""; clean; exit 1' SIGINT SIGTERM

if [ "$1" = "clean" ]  ; then
  clean
  exit 0
fi

# For loops
export LIST="A B C D E F G H I J K L M N O P Q R S T U V W X Y Z"

# Do local tests with known: settings, encypted and decoded text
function check {
  local i=$1
  echo -n "cat $DATA/crypt${i} | enigma `tail -1 $DATA/set${i}` "
  cat $DATA/crypt${i} | enigma `tail -1 $DATA/set${i}` > tmp
  cmp -s $DATA/decod${i} tmp
  res=$?
  if [ $res -eq 0 ] ; then
    echo "OK."
  else
    echo "FAILED."
    exit 1
  fi
  rm -f tmp
}

if [ "$1" = "-c" ] ; then
  check $2
  exit 0
fi

echo "Test of fixed settings, encrypted and decoded files:"
cd $DATA
crypts="`ls crypt* | grep -Ev '.*\.orig'`"
cd ..
for crypt in $crypts ; do
  i=${crypt#crypt}
  check $i
done
echo ""
if [ "$1" = "-f" ] ; then
  exit 0
fi

# Verify upper level txt files through enigmacode -c then -d
echo "Test of txt files with enigmacode:"
for file in *.txt ; do
  cat $file | enigmacode -c > tmpc
  cat tmpc | enigmacode -d > tmpd
  cmp -s $file tmpd
  res=$?
  echo -n "`basename $file` through enigmacode -c then -d "
  if [ $res -eq 0 ] ; then
    echo "OK."
  else
    rm -f tmpc tmpd
    echo "FAILED."
    exit 1
  fi
done
rm tmpc tmpd
echo ""

# Verify several letters twice through random setting
echo "Test of  a letter twice through a random setting:"
for L in $LIST ; do
  key=`def_enigma rnd`
  echo -n "$L through $key twice "
  r=`echo -n $L | enigma $key`
  r=`echo -n $r | enigma $key`
  if [ "$r" = "$L" ] ; then
    echo "OK."
  else
    echo "FAILED."
    exit 1
  fi
done
echo ""

# Verify key <-> text conversion
echo "Test of key to text and back:"
for L in $LIST ; do
  key1="`def_enigma rnd`"
  echo -n "$key1 to text and reverse "
  text=`def_enigma -text $key1 | awk '{print $NF}'`
  key2="`def_enigma $text`"
  if [ "$key1" = "$key2" ] ; then
    echo "OK."
  else
    echo "FAILED."
    exit 1
  fi
done
echo ""

echo Completed OK.
exit 0

