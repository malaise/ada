Strategy for automatic enigma setting considering the date.
Usage: def_enigma [ -text ]   <date> | today | rnd | <text_key> | <enigma_key>
  date ::= dd/mm/YYyy
   <enigma_key> ::= <reflector> [ <rotors> <rotors_init> ] [ <switches> ]

If rnd, generates a random switch sequence, 3 to 4 rotors (see B.).
reflector (A to Cthin).
If date, generates a switch sequence, 3 rotors and the reflector from the date.
If no arg, same with current date.
If text_key, displays the key from text jey (see C.).
If enigma_key, check and displays enigma key
If -text, also generates text of key (see C.).

Rotors (at least 10) and reflectors (at least 5) are defined in enigma.xml.


A. Normal generation
The date is either provided or is current date.
The date that is considered is DAYNAME DAYNUM MONTHNAME.
There are 3 rotors.

1. Reflector
The Reflector num is 1 to 3, computed from DAYNUM:
01->1, 02->2, 03 -> 3, 04 -> 1 ...
Its offset is 0 (A).

2. Rotors
There are 3 rotors:
- The first rotor number is the unit of DAYNUM, with 1->1 .. 10->10, 11->1.
- The second rotor is the tenth of DAYNUM, with 0..9->1, 10..19->2,
20..29->3 and 30..31 ->4. If used by first rotor, then add 1.
- The third rotor is month num rem 10 with 1->1 .. 10->10, 11->1...
If used by first or second rotor, then add 1.
The rotor ring offsets are the first three letters of DAYNAME respectively.
The rotor initial offsets are the first three letters of MONTHNAME respectively.

3. Switches
The switches definition is got from the letters of DAYNAME and MONTHNAME, with
criteria of unicity, no identity and even number (and max 26 letters).
Ex MONDAY DECEMBER -> MONDAYECBR.

4. Output format
The reflector setting is <reflector_name><reflector_offset>
The optional setting of rotors is -r<rotor>#<rotor>....
  where each <rotor> is <rotor_name>@<ring_offset>
The initial rotors positions are -i{<letter>} with as may letter as rotors
number.
The optional switchs are -s{<letter><letter>}
Ex: Cthin@B -rI@G#IV@C#VII@Q#II@G -iTLDO -sTPWASFXIEVZCYLBN


B. Random generation
The reflector is random from 1 to 3 if 3 rotors, from 1 to 2 (meaning Bthin and
Cthin, num 4 and 5) if 4 rotors. It has no offset (A).
The rotors are a random number (3 to 4 included) of random rotors,
each with a random ring offset letter and a random initial offset letter.
If 4 rotors, the 1st is 1 or 2, meaning Beta or Gamma (num 11 and 12).
The other rotors are from 1st to 10th.
The switch is a random list (1 to 12 included) of random pairs of letters


C. Text output
If optionnal -text is provided, the key (random, from current date or from
provided date) is translated to text:
The switch definition is displayed, followed by JJJ (letter cannot appear
twice at first of pair, nor twice as second of pair, in switch definition).
Then the rotors are displayed but their number in letters instead of name,
each with the ring offset then the initial offset.
Then the reflector num in letters and its offset.
Then the reflector offset is repeated (so that, like a rotor, it is a number
in letters then two letters), then a 'Z' (which cannot start a digit in
letters), which marks the end). Example
-rV@M#III@O#I@N B@Y -iJAN -> MONDAYJUJJJFIVEMJTHREEOAONENNTWOYYZ
Note that even in case of 4 rotors the 4th rotor is ONE or TWO and the reflector
is ONE or TWO.

If the key is provided as text, then it is transformed into normal opions.

