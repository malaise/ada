Complex coding
--------------
A random key is generated in arguments and text:
def_enigma rnd -text
This displays <key_args> and <key_text>.

The key in text is coded, with a key generated from the current day, at the
beginning of the coded file:
echo -n "<key_text>" | enigmadef <date>  > <coded_file>
<date> can be an explicit date (dd/mm/yyy) or "today"

The input file is coded with the random key and appended to the coded file
enigma <key_args>  < <input_file>  >> <coded_file>

Complex decoding
----------------
Extract temporary in the decoded file the 68 first characters from the coded
file, with the key generated from the current (today) or a provided date:
<txtkey>=enigma `def_enigma <date>` -l68
(68 because 26 for switch, 3 for JJJ, 4 * 7 + 3 (5 is longest number in letters
e.g. SEVEN) for the 4 max rotors, 5 + 3 (number+offset twice+"Z") for the
reflector.
txtkey=`enigma $datekey -l68 < <coded_file>`

Look in the temporary result for the "JJJ" then read the key in text, until
<num_in_text><letter><letter><num_in_text>. Note the offset <offset> of the
irst letter following this sequence.
numkey=`def_enigma <textkey>` ; start=$?

Decode the remaining text with the key:
enigma <numkey> -f<start>  < <coded_file>  > <decoded_file>

