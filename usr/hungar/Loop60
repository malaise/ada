#!/bin/bash

if [ \( "$1" = "-h" \) -o \( "$1" = "--help" \) ] ; then
  echo "Usage: `basename $0` [ default | infinite | <max> ]"
  echo "  default:  Default of hungar"
  echo "  infinite: Infinite"
  echo "  <max>:    Positive max"
  echo "  defaults to the default of Test"
  exit 1
fi

# Approximative rate of success and max time (on a 2GHz CPU), for some max loops
#    MaxLoop  Success MaxTime
#      100  =>  20%      1s
#      250  =>  40%      2s
#      500  =>  70%      4s
#     1000  =>  90%      7s
#     2000  =>  99%     13s
#     3000  =>  99%     19s
#     3601  =>  99%     22s
# Infinite  => 100%     32

# Optional max Nb of iterations
if [ -z "$1" ] ; then
  # The default of Test on test60.dat: 3601
  MAX="--max=3601"
elif [ "$1" = "default" ] ; then
  # The default max of hungar: (Dim * Dim + 1) * 10 = 36010
  MAX="--max"
elif [ "$1" = "infinite" ] ; then
  # The default of hungar: infinite
  MAX=""
else
  # The provided value
  MAX="--max=$1"
fi
export MAX
echo Max is: $MAX

let tot=0+1
let nok=0+0
max="0mn00s"
while true ; do
  # Start
  echo $tot | awk '{printf "Iteration %3d ", $1}'
  t0=`date "+%s"`
  hungar $MAX test60.dat >/dev/null 2>&1
  res=$?

  # Report
  if [ $res -eq 2 ] ; then
    let nok=$nok+1
    echo -n "KO "
  else
    echo -n "ok "
  fi
    
  # Compute execution time
  t1=`date "+%s"`
  delta=`echo $t0 $t1 | awk '
    {D=$2-$1
     printf "%dmn%02ds", D/60, D%60
    }
  '`
  echo -n "in $delta => "

  # Stat
  echo | awk -v TOT=$tot -v NOK=$nok '
  {
    printf "%3d%", (TOT - NOK) / TOT * 100
  }
  '
  let tot=$tot+1
  max=`echo $delta $max | awk '
    ($1 > $2) {print $1; exit}
    {print $2; exit} 
  '`
  echo " max=$max"
done

