# Fuel consumption of Concorde
# Error message
[ "ERROR. Invalid argument" putl
"Usage: concorde ""<total_distance>[-<subsonic_distance>]<unit>""" putl
"  <unit> ::= km | Nm | Mi" putl
1 setexit ssize popn retall ] E popr

# Check and extract subsonic length according to "-"
ssize 1 /= E pushr ifcall
a copyr dup strlen l popr 1 "-" strloc i copyr isnull 
[ "0" s popr ]
[ i pushr 1 <= E pushr ifcall i pushr l pushr 3 - > E pushr ifcall
a pushr i pushr 1 + l pushr 2 - strsub s popr
a pushr 1 i pushr 1 - strsub a pushr l pushr dup 1 - swap strsub strcat
dup strlen l popr a popr
] ifte call
# Split total length and unit
a pushr 1 l pushr 2 - strsub t popr
a pushr l pushr 1 - l pushr strsub u popr

# Check unit
0.0 f popr u pushr dup dup
"km" = [ 1.000 f popr ] ifcall
"Nm" = [ 1.852 f popr ] ifcall
"Mi" = [ 1.609 f popr ] ifcall
f pushr 0.0 = E pushr ifcall

# Check distances and convert into km
[ dup pushr dup caninte  ~ E pushr ifcall strinte toreal f pushr * swap popr 
] C popr
s C pushr call
t C pushr call

# Compute total - (subsonic + transitions)  (transition=climb+descent, 450 NM)
3 format t pushr
450 v copyr toreal 1.852 * s pushr + - dup isneg
[ "ERROR. Subsonic plus transitions (" put v pushr put 
" Nm) is longer than total"
putl 1 setexit ssize popn retall ] ifcall
# Per 1000km; 11 T cruise and 26 T subsonic
11.0 * s pushr 26.0 * + 1000.0 /
# Add conso for Transistion + Ground + Security
38.0 +
# Put result
-1 roundat 6 4 " " normal
[ dup 1 1 strsub " " = [ 1 1 strdel ] ifcall ] H copyr call H pushr call
put "T" putl

