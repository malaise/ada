# Test arbitrary sqrt on random values

# Get the max number of digits m
# Default is 78 (so that "@+<78digits>" fits in 80 colums)
ssize 0 = [ 78 ] ifcall
m popr
# Make a random arbitrary a of 1 tp m digits
# Loop on a = sqrt(a) until a = 1
# Sleep 1
# Do it again

# Function do make a random arbitrary a
[ "@" a popr 1 format
# Random number of digits from 1 to m, store in i
m pushr toreal rnd * trunc 1 + i popr
# i digits from 0 to 9
[ 10 toreal rnd * trunc strof a pushr swap strcat a popr
i pushr 1 - i copyr 0 = ifret A pushr retacal
] A popr
A pushr call a pushr strarbi a popr
] R popr

# Function to put Sqrt (a), then its Sqrt... successively until a=1
[ a pushr dup putl sqrt a copyr
@+1 = [ a pushr putl 2 retn ] ifcall S pushr retacal
] S popr

# Infinite main loop
[
R pushr call
S pushr call
newl
1.0 sleep
M pushr retacal
] M popr

# Call main loop
M pushr call

