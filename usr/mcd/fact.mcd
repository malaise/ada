# Clear stack
[ ssize 0 = [ 0 retn ] ifcall pop Z pushr retacal ] Z popr

# Check 1 arg >= 0
5 format 7.007 format
[ [ Error: 1 argument N >= 0 expected. ] putl Z pushr call ] E popr
ssize 1 /= E pushr ifcall
dup 0 < E pushr ifcall

# F(0) -> 1
# F(i) -> F(i-1) * i
[ dup 0 = [ pop 1.0 2 retn ] [ dup 1 - ] ifte call F pushr call
  toreal swap toreal * ] F popr

# F(n)
dup
F pushr call
swap put [ " ! = " ] put putl

