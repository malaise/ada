# Power 2 polynom

# Check 3 args
7.014 format
ssize 3 /= [ "Error. 3 arguments a b c expected" putl
ssize popn retall ] ifcall

# Save a b c, 15 digits, title
toreal c popr toreal b popr toreal a popr
"  " put a pushr put " * X**2" putl
"+ " put b pushr put " * X" putl
"+ " put c pushr putl

# a = 0
# b = 0
# c = 0 ?
[ c pushr 0.0 = "Infinity of solutions" "No solution" ifte putl ] L popr

# a = 0
# b /= 0: -c / b
[ "1 real: " put c pushr +- b pushr / putl ] R popr

# a = 0
# b = 0 ? then quit
[ b pushr 0.0 = L R ifte pushr call 2 retn ] P popr

# a = 0 ?
a pushr 0.0 = P pushr ifcall

# d = b**2 - 4ac
b pushr dup * 4.0 a pushr c pushr * * - d popr
"delta =    " put d pushr putl newl
"Solution " putl
# -b / 2a
b pushr +- 2.0 a pushr * / i popr

# d = 0 => -b / 2a
d pushr 0.0 = [ "1 real: " put i pushr putl 2 retn ] ifcall

# d > 0 => -b/2a +- V(d)/2a
d pushr 0.0 > [ d pushr 0.5 ** 2.0 a pushr * / j popr 
             "2 reals: " put i pushr j pushr + putl
             "    and: " put i pushr j pushr - putl 2 retn ] ifcall

# d < 0 => -b/2a +- i * V(d)/2a
d pushr +- 0.5 ** 2.0 a pushr * / j popr "2 complex: " put i pushr putl
                                         "   +/- i * " put j pushr putl

