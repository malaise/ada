# Entry is m=TotalMonth [ Extras ]
[ "Error. Expecting <total_month> [ { <extra> } ]" putl
1 setexit ssize popn retall ] E popr
ssize 0 = [ E pushr call ] ifcall

# Put a number: split it in several part less than 100
[
2 format
dup 99 > [ "99+" put 99 - ] ifcall put
] P popr

# Loop to sum and store extras in e
0 e popr
[
  ssize 1 = ifret
  dup isinte ~ [ E pushr call ] ifcall
  copye
  e pushr + e popr
  S pushr retacal
] S copyr call

# Total month
m copyr isinte ~ [ E pushr call ] ifcall

# Round 6% of m for r=CSE, substract to the sum
m pushr toreal 6.0 * 100.0 / round r popr

# The remaining without extras is f=4Flight
m pushr e pushr - r pushr - f popr

# Sanity check
r pushr e pushr + f pushr + t copyr
m pushr - isntnull [ "Error: Sum is " put t pushr putl ] ifcall

# Put results
"CSE: " put r pushr 2 format putl
"4Flight: " put f pushr 3 format dup put " = " put P pushr call newl

# Put sum and detail of extras
e pushr 0 /=
[ "Extras: " put e pushr put
  " = " put 0 format
  [
    esize isnull ifret
    pushle P pushr call
    esize isntnull [ " & " put ] ifcall
    S pushr retacal
  ] S copyr call
  newl
] ifcall

