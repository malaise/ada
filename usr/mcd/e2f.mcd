# Francs <-> Euros conversion

# Error and quit
[ "Usage: e2f <amount>[<unit>]" putl
  "   <amount> : integer or float" putl
  "   <unit>   :  f or e (default e)" putl
ssize popn retall ] E popr

# Francs in an euro
6.55957 e popr

# Check 1 arg
ssize 1 /= E pushr ifcall
# Store arg
a copyr

# Parse arg
strlen l copyr
# At least one char
1 < E pushr ifcall

# Extract unit - last char
a pushr l pushr dup strsub strlow
# Unit is f or e or . or digit (e if default)
u copyr "f" /= u pushr "e" /= & d copyr u pushr "." /= &
u pushr "0" < u pushr "9" > | & E pushr ifcall

# Length of amount
d pushr ~ [ l pushr 1 - l popr ] ifcall
# Default unit
d pushr [ "e" u popr ] ifcall

# Extract amount value
a pushr 1 l pushr strsub v copyr
# locate '.'
1 "." v pushr strloc
# Convert to real
0 = [ strinte toreal ] [ strreal ] ifte call
v copyr

# Check not more than two digits of cents
100.0 * frac absv epsilon > E pushr ifcall

# Set conversion factor and result unit
e pushr u pushr "f" = [ 1.0 swap / "e" r popr ] [ "f" r popr ] ifte call

# Convert
v pushr *

# Display arg =
a pushr put d pushr [ u pushr put ] ifcall " = " put

# Round cents and display "int."
100.0 *
round dup
1 format 100 / put "." put
# Display frac (2 digits) and unit
100 % dup 10 < [ "0" put 1 format put ] [ 2 format put ] ifte call
r pushr putl

