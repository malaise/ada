# Displays for each dimension of a magic square, the sum to expect

# No argument
ssize 0 /= [ "Error. No argument accepted." putl ssize popn retall ] ifcall

# This function puts n and ((n * n  * n) + n) / 2
# n beeing and remaining at top of stack
[
dup put " -> " put
dup dup dup dup * * + 2 / putl
] F popr

# The loop
[
F pushr call
1 +
L pushr retacal
] L popr


10 format
1 L pushr call



