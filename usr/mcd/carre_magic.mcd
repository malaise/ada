# Display, for each dimension of a magic square, the sum to expect
# If n is the dim of the square, then the number of cells is N = n * n
#  and the sum of all squares is S = (N * (N + 1)) / 2
#  and the sum in each line, row, diag is s = S / n
# So s = n * n * (n * n + 1) / 2 / n
#      = ( (n * n * n) + n) / 2


# No argument
[ "Error. One optional size accepted." putl ssize popn 1 setexit retall ] E popr
ssize 1 > E pushr ifcall

# This function puts n and ((n * n  * n) + n) / 2
# n beeing and remaining at top of stack
[
dup put " -> " put
dup dup dup dup * * + 2 / putl
] F popr

# If one argument, the size
ssize 1 = [ dup isinte ~ E pushr ifcall F pushr call ssize popn retall ] ifcall

# The loop
[
F pushr call
1 +
L pushr retacal
] L popr

10 format
1 L pushr call

