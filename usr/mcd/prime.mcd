# Put prime numbers

# Loop on all extra stack
#  j has to be initialised to 0
#  Top of stack has to be true and is replaced by False if i not prime
[
# Done (j = n)?
esize j pushr = ifret
# Check next
j pushr 1 + j popr
# Check i % fe. 0 => not prime
i pushr pushfe copye % 0 =
# Not prime, restore estack (rotate j times from last)
dup [ j pushr rotle swap pop false swap ] ifcall ifret
L pushr retacal ] L popr


# Loop on all numbers
[
# Check current i
0 j popr true L pushr call
# I prime?  Put it and insert in estack
[ i pushr copye putl ] ifcall
# Next i
i pushr 1 + i popr
# Infinite loop
S pushr call ] S popr


# 1 is prime
4 format
1 putl

# First number to check
2 i popr
S pushr call

