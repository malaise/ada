#!/bin/bash
error() {
  echo "Usage: $1 <num1> [ { <oper> <num2> } ]"
  echo " <oper> ::= + | - | x | * | /"
  echo " <num1> is in Hours.MinutesSecondsMiliseconds"
  echo " <num2> is in Hours.MinutesSecondsMiliseconds if <oper> is + or -"
  echo " <num1> (and <num2> if <oper> is + or -) can also be \"now\""
  exit 1
}

if [ $# -lt 1 ] ; then
  error `basename $0`
fi

# Adjust the format of a input time, process "now"
function adjust {
  if [ "$1" = "now" ] ; then
    res="clock :%H.%M%S: dateimg strreal degfr"
  else
    res="$1 toreal $2"
  fi
  echo -n $res
}

# Process first arg
str=`adjust $1 degfr`
shift

# Loop on pairs (op, num2)
num=""
while [ "$1" != "" ] ; do
  if [ "$2" = "" ] ; then
    error `basename $0`
  fi
  op="$1"
  case "$op" in
    "+" | "-" )
      # Num is a time
      numadj="degfr"
    ;;
    "*" | "x" | "/" )
      # "x" is "*"
      if [ "$op" = "x" ] ; then
        op="*"
      fi
      # Num is a number
      numadj=""
    ;;
    * )
      echo default
      error `basename $0`
  esac
  num=`adjust $2 $numadj`
  str="$str $num $op"
  shift
  shift
done

# Process input and format output
echo "$str :format_time.mcd: readfile strprog call putl" | mcd

