Agite Cherry-Pick improvement
=============================

Workflow to simulate rebase
---------------------------
* Checkout dest branch
* Create tmp_branch
* Checkout tmp_branch
* Cherry-pick from origin
* Checkout origin
* Reset --hard tmp_branch
* Delete tmp_branch

Cherry-Pick list
----------------
In the Cherry-pick list:

* keep the "=" for "already merged not modifable", skipped
* keep the " " for "skip", button Remove renamed Skip
* Use "A" for "pick and go on", button Apply
* Use "E" for "pick and edit for commit", button Edit
* Use "F" for "pick as fix and edit previous comment if it is a Apply",
button Fixup
* Use "C" for "pick and commit", button Commit
* Keep the Reset and Detail buttons
Init the list with 'C' and '='.

Processing the list
-------------------
Process the list from top to bottom:

* On 'A', call
  - CherryPick -n on the SHA
  - Store SHA as last-applied
  - Continue looping
* On 'E', call:
  - CherryPick -n on the SHA
  - Reset last-applied
  - Call the Commit screen (with this SHA), which returns either
    * Committed (Button Commit) => continue looping
    * Not_Commited (Button Back) => continue looping
    * Quit (Button Quit) => stop loop.
* On 'F', call:
  - CherryPick -n on the SHA
  - Reset last-applied
  - Call the Commit screen (with last-applied SHA if any SHA)
* On 'C', call:
  - CherryPick on the SHA
  - Continue looping

Refresh the list after each each commit (action C, or action E returning
Committed).

Quitting Commit
----------------
Quitting the commit returns to the main (Directory) screen. But as long as:

- The same orig and dest branch are selected,
- CherryPick Reset is not called,

the CherryPick screen shall maintain the list issued from original selection
and processing so far:

- Reassess the Cherry list
- Remove items that have disappeared
- Set "=" to all items already merged in the new list
- Add new items with tag 'C'

Changes
-------
Need a 'Cherrypick -n' function in git_if, 'Commit' screen management to become
a function (Quit_Io_Push : in Boolean; Hash_Of_Comment : in Git_Hash)
return Boolean;

Need new buttons, so: Apply, Edit, Fixup, Commit, MovUp and MovDw in addition to
Skip, Detail, Reset. So need to move cherry pick in a new descriptor and
package.

ToDo
----

1. Move cherry pick in a new descriptor and a new package

2. Add No_Commit option to Git_If.Cherry_Pick

3. Add Quit_Io_Push and Hash_Of_Comment to Commit.Handle

4. Modify the list display, action buttons and processing

5. Doc, make a major release. Describe two use case of 'rebase -i' (on the
branch itself or on a ref branch).

