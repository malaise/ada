1) branch and Afpx
Add button CherryPk
2) details
Add a flag In_Branch that de-activates the Hist and Restore buttons
3) git_if
- Add a Git_Cherry operation that takes two branches (Target and Ref) and
  calls "git cherry Target Ref", returns the list of commits, with the tag
  Merged set or not (add this field in Log_Entry_Rec)
- Add a function Show that fills the date and comment of a commit
- Add a Cherry_Pick operation that takes a list of commits
  and calls "git cherry-pick --ff { <SHA-1> }"
4) history
Duplicate Handle into a new operation Cherry_Pick that takes a branch name and
returns a Boolean
Factorise internally in history.adb
In Cherry_Pick mode, 
- Call Details with In_Branch set
- List the Cherry commits of the Ref branch with
 '=' already merged (cannont be added)
 '+' Added
 ' ' not added
- Change buttons
 * button Restore becomes Add, it adds a commit or a list (between right and
   left selection included) but not the commits already '=': They become '+'
 * button Checkout becomes Del, idem as Add but unselects: They become ' '
 * button Tag becomes Reset: all the not '=' become ' '
 * button Back becomes Done
- If Done and list of '+' is not empty, then
 * Set the Afpx list to this selection
 * Confirm (showing the list) from Refbranch into Target(current)
- If confirm Ok, do git cherry-pick --ff { <SHA-1> }'
5) Update doc, remove ToDo
