#!/bin/bash

function usage {
  echo "Usage: `basename $0` [ <warnings> ] [ <precision> ] [ <threads> ]"
  echo "Usage:    <warnings>  ::= -w | --warnings ]"
  echo "Usage:    <precision> ::= -p <prec> | --precision=<prec>    // Default 2" 
  echo "Usage:    <threads>   ::= -t <nb> | --threads=<nb> ]        // Default 1"
  echo "    or `basename $0` [ -h | --help ]"
}

function error {
  echo "ERROR: $1."
  usage
  exit 1
}

# Parse options
export WARN=""
export THREADS=1
export TDIR=test
export PRECISION="2"

T0=`date "+%s"`

while [ -n "$1" ] ; do
  case "$1" in
    ("-h"| "--help")
      usage
      exit 0
    ;;
    ("-w"| "--warnings")
      WARN="-w"
    ;;
   ("-p")
      export PRECISION="$2"
      shift
    ;;
    (--precision=*)
      export PRECISION="${1#*=}"
    ;;
   ("-t")
      export THREADS=$2
      shift
    ;;
    (--threads=*)
      export THREADS=${1#*=}
    ;;
    (*)
      error "Invalid argument"
      exit 1
    ;;
  esac
  shift
done

# Check values
if ! [[ $PRECISION =~ [0-8] ]] ; then
  error "Invalid precision"
fi
if ! [[ $THREADS =~ [1-4] ]] ; then
  error "Invalid threads"
fi

# Put values
echo -n "$THREADS thread"
if [ $THREADS -ne 1 ] ; then
  echo -n "s"
fi
echo ", precision $PRECISION"

export PRECISION="P${PRECISION}"

echo Encode
while read -r lat lon || [[ -n "$lat" ]]; do
  if [ \( -z "$lat" \) -o \( "$lat" = "#" \) ] ; then
    continue
  fi
  t_accuracy $PRECISION $WARN $lat $lon >/dev/null
  res=$?
  if [ $res -ne 0 ] ; then
    if [ $res -eq 1 ] ; then
      exit 1
    else
      echo "Occured with " $lat " " $lon 1>&2
    fi
  fi
done < $TDIR/EncodeOk

echo Decode

# Wait for termination of $1 children (pids in $pids)
function wait_children {
  let i=1
  let n=$1
  while [ $i -le $n ] ; do
    wait ${pids[${i}]}
    res=$?
    if [ $res -ne 0 ] ; then
      if [ $res -eq 1 ] ; then
        exit 1
      else
        echo "Occurred with " ${comm[${i}]} 1>&2
      fi
    fi
    let i=$i+1
  done
}

# Main loop, for each line of the file DecodeOk 
let L=0
let C=0
while read -r ctx cod lat lon loc glob ; do
  if [[ $ctx =~ ^#|^$ ]] ; then
    continue
  fi

  # Async launch
  t_accuracy $PRECISION $WARN $ctx:$cod >/dev/null &
  let C=$C+1
  pids[${C}]=$!
  comm[${C}]="$ctx:$cod"

  # Each THREADS, wait for all to end, check result
  R=$((C % THREADS))
  if [ $R -eq 0 ] ; then
    wait_children $C
    let C=0
  fi

  # Show a dot every 100 line
  R=$((L % 100))
  if [ $R -eq 0 ] ; then
    echo -n "."
  fi
  let L=$L+1

done < $TDIR/DecodeOk

# Wait for remaining tasks
wait_children $C
echo

T1=`date "+%s"`
echo $T0 $T1 | awk '
  {D=$2-$1
   printf "Done in %dmn%ds\n", D/60, D%60
  }
'

