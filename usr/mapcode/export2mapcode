#!/bin/bash

# Error message and usage
function error {
  echo "ERROR: $1." 1>&2
  echo "Usage: `basename $0` <target_dir>" 1>&2
  exit 1
}

# Return the comment leading string, and the target subdir,
# depending on the suffix of $1
function comment_target {
  filename=$(basename -- "$1")
  extension=$([[ "$filename" = *.* ]] && echo "${filename##*.}" || echo '')
  case $extension in
    ads|adb)
      echo "-- src"
    ;;
    *)
      echo "# test"
    ;;
  esac
}

  
# Check arguments
if [ -z "$1" ] ; then
  error "Missing argument"
fi
export TARGET=$1
if [ \( ! -d $TARGET \) -o \( ! -w $TARGET \) ] ; then
  error "Directory $TARGET not found or not writable"
fi

# Generate the version for export
make Export

# Files to export
export FILES="mapcode_utils.ads mapcode_utils-*.ad* \
ctrynams.ads ndata.ads mapcodes.ads mapcodes.adb ndata.ads \
t_mapcode.adb fulltest test/*"

# Add Copyright headers and copy in TARGET
H[1]=' -----------------------------------------------------------------------------'
H[2]=' Copyright (C) 2003-2019 Stichting Mapcode Foundation (http://www.mapcode.com)'
H[3]=' '
H[4]=' Licensed under the Apache License, Version 2.0 (the "License");'
H[5]=' you may not use this file except in compliance with the License.'
H[6]=' You may obtain a copy of the License at'
H[7]=' '
H[8]='    http://www.apache.org/licenses/LICENSE-2.0'
H[9]=' '
H[10]=' Unless required by applicable law or agreed to in writing, software'
H[11]=' distributed under the License is distributed on an "AS IS" BASIS,'
H[12]=' WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.'
H[13]=' See the License for the specific language governing permissions and'
H[14]=' limitations under the License.'
H[15]=' -----------------------------------------------------------------------------'

for file in $FILES ; do
  echo $file
  name=`basename -- $file`
  i=1
  # Prepend comment
  ct=`comment_target $name`
  comment=${ct% *}
  target=$TARGET/${ct#* }
  while [ ! -z "${H[i]}" ] ; do
    line="$comment${H[i]}"
    if [ $i -eq 1 ] ; then
      # First line
      echo "$line" > $target/$name
    else
      echo "$line" >> $target/$name
    fi
    i=$(( i + 1 ))
  done
  # Append file
  echo >> $target/$name
  cat $file >> $target/$name
done
chmod +x $TARGET/test/fulltest
ln -fs -t $TARGET/test $TARGET/src/t_mapcode

# Reset to local version
make scratch

