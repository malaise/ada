#!/bin/bash

# Automatic tests of misc

# Cleanup
function clean {
  rm -f cmp res out err expout experr
}

# Error message
function error {
  echo
  echo $* 2>&1
  exit 1
}

# Compare 2 files
function comp {
  local ok=1
  if [ $1 = "-n" ] ; then
    ok=0
    shift
  fi
  cmp $1 $2 2> /dev/null
  res=$?
  if [ $ok -eq 1 ] ; then
    if [ $res -ne 0 ] ; then
      error "File $1 differs from expected $2."
    fi
  else
    if [ $res -eq 0 ] ; then
      error "File $1 should differs from expected $2."
    fi
  fi
}

trap 'echo ""; clean; exit 1' SIGINT SIGTERM

# One test of compression / uncompression
function azf_one {
  export OPT=""
  if [ "$1" = "--lz4" ] ; then
    OPT="--lz4"
    shift
  elif [ "$1" = "--snappy" ] ; then
    OPT="--snappy"
    shift
  fi
  local file=$1

  echo -n azf $OPT $file 
  cat $file | azf $OPT -s 900 -c > cmp
  if [ $? -ne 0 ] ; then
    echo
    echo "Azf $OPT -c $file has failed." 2>&1
    exit 1
  fi
  let ISIZE=0+`ls -l $file | cut -d ' ' -f 5` 
  let CSIZE=0+`ls -l cmp   | cut -d ' ' -f 5` 
  if [ $ISIZE -eq 0 ] ; then
    echo " 0"
  else
    let PER=\($ISIZE-$CSIZE\)*100/$ISIZE
    echo " "$PER"%"
  fi

  cat cmp | azf $OPT -s 900 -d > res
  if [ $? -ne 0 ] ; then
    echo
    echo "Azf $OPT -d on $file has failed." 2>&1
    exit 1
  fi

  cmp $file res 2>/dev/null
  res=$?
  if [ $res -ne 0 ] ; then
    echo
    echo "File res differs from original $file." 2>&1
    exit 1
  fi
}

# Specific option to do one azf test
if [ "$1"  = "--lzf" ] ; then
  shift
  for file in $* ; do
    azf_one $file
  done
  clean
  exit
elif [ "$1"  = "--lz4" ] ; then
  shift
  for file in $* ; do
    azf_one --lz4 $file
  done
  clean
  exit
elif [ "$1"  = "--snappy" ] ; then
  shift
  for file in $* ; do
    azf_one --snappy $file
  done
  clean
  exit
fi

# Default
if [ "$1" != "--none" ] ; then
  # Azf on lzf, lz4 and snappy
  for file in `ls *.ads *.adb lib/*` ; do
    azf_one $file
    azf_one --lz4 $file
    azf_one --snappy $file
  done
  echo ""
fi

# Comp_vars with SET_ME set
echo "comp_vars with SET_ME"
export SET_ME=Momo
comp_vars < variables.xml >out 2>err
cat > expout << EOF
<?xml version="1.1"?>
<Variables>
  <Var Name="V1" Type="Int">5</Var>
  <Var Name="PATH" Type="Str">$PATH:/usr/local/bin</Var>
  <Var Name="V2" Type="Int">125</Var>
  <Var Name="V3" Type="Str">5*125</Var>
  <Var Name="V4" Type="Str"></Var>
  <Var Name="V2" Type="Int">1250</Var>
  <Var Name="Fail" Type="Str">Momo</Var>
</Variables>
EOF
echo -n > experr
comp out expout
comp err experr

# Comp_vars without SET_ME set
echo "comp_vars without SET_ME"
unset SET_ME
comp_vars < variables.xml >out 2>err
cat > experr << EOF 
Error: Environ variable SET_ME not found.
Error processing input flow at line 15 on node Var:
Unknown variable while evaluating variable.
EOF
comp err experr

# Done
echo "OK"
clean

