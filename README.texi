\input texinfo.tex    @c -*-README-*-
@c %**start of header
@setfilename README
@settitle README
@c %**end of header

@c Constants
@set name Ada notes
@c General format
@paragraphindent none
@exampleindent 0

@c Title and front page
@node Top
@ifhtml
@center @titlefont{@value{name}}
@end ifhtml
@ifnothtml
@top @center @value{name}
@end ifnothtml

This README file describes briefly the main directories of the Ada contrib.@*
The software compiles with Ada05 (Gnat GPL 2010) and runs on Unix (Linux).@*
Some programs depend on PCRE (Perl Compatible Regular Expressions) and work
with version 7.8 or above (8.11 is OK).@*
Programs are rated from 1 (simple) to 3 (very complex), on subjective criteria.

@menu
* Gnatmake::         Script used to manually invoke gnatmake.
* Makefiles::        Project with makefiles 'mk'.
* C::                C bindings to OS, socket, pcre, X11...
* Reposit::          Repository of common packages.
* Usr::              Directories with the projects.
* Cots::             Directories with copies of imported projects.
@end menu

@node Gnatmake, Makefiles, Top, Top
@chapter Gnatmake (optional)
The script ada/gnatmake can be set in the PATH (you can copy it or make a link
from $HOME/bin/gnatmake to it).@*
Similarly, the commands "ada" and "gnatlink" can be in the path and be this
gnatmake (you can copy it or make links from $HOME/bin/ada and
$HOME/bin/gnatlink to it).@*
Automatic generation by make (see next section) don't use them but these scripts
are convenient.

@node Makefiles, C, Gnatmake, Top
@chapter Makefiles project (MANDATORY)
This project gathers several generic definitions for C and Ada generation.
Several examples of usage can be found in the source directories.

@section Relocation of the Makefiles directory
If the Makefiles installation directory is not $(HOME)/Makefiles,@*
- the definition of TEMPLATES in common.mk has to be adapted,@*
- all makefiles must have their first include directive of common.mk adapted.

@section Relocation of C or Repository
If the c or the repository directory are not in $(HOME)/ada, then the template
path.mk of Makefiles must be modified.

@section Recursive make
The content of the makefile for applying make to subdirecotries is:@*
SUBDIRS := c reposit usr@*
include $(HOME)/Makefiles/dir.mk
@sp 1
Other directives can be added if something has also to be compiled in current
dir.

@node C, Reposit, Makefiles, Top
@chapter C directory (MANDATORY)
Four libraries here:

@section Lib C util (cutil)
This lib gathers several low level utility libraries:
@itemize @minus
@item timeval
used by other C libraries, for struct timeval operations,
@item socket
interfaced by Ada Socket package, interfaces socket (tcp, udp, ipm, message on
tcp, afinet or afux) calls,
@item sys_calls, interfaced by Ada Sys_Calls and some other Ada packages, for
several operating system calls,
@item wait_evt, interfaced by Ada Even_Mng package, waits (with "select") on
several fds, catches signals...
@end itemize

@section Lib X Mng (xmng)
This lib encapsulates all needed calls to X11, interfaced by X_Mng Ada package.

@section Lib C Ndbm (cnbdbm)
This lib interfaces with ndbm C library. The corresponding Ndbm package is not
used at present (except in test).

@section Lib Posix to PCRE (posic2pcre)
Own binding of PCRE to POSIX API, with extension, interfaced by
Regular_Expressions Ada package.

@node Reposit, Usr, C, Top
@chapter Reposit directory
Many utility packages here.@*
Some of them are interdependant, the main dependency trees are:
@itemize @minus
@item Graphic (X11) function:
X_Mng <- (Genric_)Con_Io <- Afpx and Curve
@item Communication, Timers:
Socket, Timers and Event_Mng <- Tcp_Util <- Channels
@end itemize

The most complex is definitively the Xml_Parser.@*
See reposit/REPOSIT_LIST for the list of packages.

@node Usr, Cots, Reposit, Top
@chapter Usr directories
Each ot them hosts a standalone project except tests (test programs of
repository packages) and tasks (simple task examples).
@sp 1
They all depend on C and Reposit and are independant from the others
(except Mcd&Pipe -> Fifos -> Dictio).
@sp 1
The more usefull are Agite, Alook, Astub, Asubst, Lsadeps, Mcd, Udp_Spy
and Xml_Checker.
@sp 1
Here is the full list and description:
@table @asis
@item Account (3)
Based on Afpx, this tool makes the management of bank accounts, with cheque,
credit card (defered) and transfer operations.
@item Agite (2)
GUI for Git, dir oriented.
@item Als (3)
Lists, more or less the "ls" way, files and directories. Allow selection by
date, type, regexp. Allows merging of all outputs and sorting.
@item Approx (3)
Using Afpx and Curve, the program computes and displays the polynomial
approximation of a set of points in the plan.
@item Astub (3)
Ada05 stubber (makes compilable empty body from spec).
@item Asubst (3)
Substitutes strings matching regexp by strings in files.
@item Chess (3)
With Con_Io and Tcp_Util, allows 2 players to play chess on one or 2 computers.
Checks movement validity (already tricky) but does not play against human.
@item C_Magic (1)
Small program that computes magic squares (numbers from to 1 in a square, with
same sum on all rows, cols and diags). Consumes a lot of CPU despite many
optims :-)
@item Code (1)
Simple program that codes (crypts) and decodes a text. The crypting algo is
very old and not secure.
@item Day_Of_Week (1)
Simple program that tells everything on today (or on another day).
@item Dictio (3)
Distributed data dictionnary that allows to store data, distribute this data
base on all the machines. Ensures correct insertion of new machines and
constant consistency. Recovery of data loss may be optimized (resends all).
@item Enigma (2)
Encodes/decodes text like german enigma machine did in ww2.
@item Fifos (2)
Use Dictio to make distributed point to point connections (logical adress,
automatic connection and re-connection).
@item Fl (1)
Simple computation of fligh log (adding hours and minutes).
@item Great_Circle (1)
Computation of heading and distance between two points on earth (GPS).
@item Heart (3)
DB of heart rate measures, displayed with Afpx.
@item Hungar (2)
Euristic search (hungarian method) of best affection (e.g. of peaple to jobs).
Tough algo.
@item Lem (2)
Game: land the LEM on the moon.
@item Lsadeps (2)
Shows the list/tree of Ada units/files dependencies
@item Mcd (3)
Reverse polish computer. At command line level but very powerful.
@item Misc
Many simple programs here. The most interesting are:
@itemize @minus
@item Alook (2) properly formats the words of a (valid) Ada05 source file.
@item Dtd_Checker (1) check a DTD file (of a xml).
@item Prime (1) search prime numbers.
@item Stat (1) measures the number of instruction of a (valid) Ada source file.
@item Status (1) evaluates if a target file needs to be rebuilt.
@item Tcping (1) pings in tcp a host/port.
@item Trail_spaces (1) removes tabs and trailing spaces and dos2unix a file.
@item Udp_Spy (2) displays udp/ipm packets received on a port.
@item Xml_Checker (2) uses Xml parser and generator (from reposit) to check XML.
@end itemize
@item Mmind (2)
Mastermind game.
@item Navig (2)
Navigation computation (wind, speed, heading, route, drift...).
@item Nimmari (2)
Nim and Marienbad games.
@item Pexec (1)
Recursive execution on directories of commands.
@item Pipe (1)
Uses Fifo to relay stdin to another host where another pipe can put it on
stdout.
@item Renardeau (2)
Computes a target number by combining base numbers.
@item Simusi (2)
Machining simulation. (Tough algo).
@item Sokoban (3)
The famous Sokoban game (push the boxes).
@item Tasks
Several small programs playing with tasks.
@item Tests
Several small test programs of the Repository packages.
@item Xwords (2)
A graphical lexicography of common words and nouns (french DB).
@end table

@node Cots, , Usr, Top
@chapter Cots directories
This directory mainly contains copies of:
@itemize @minus
@item pragmarc and mine from http://pragmada.x10hosting.com/ (under GPL)
@item LinXtris from http://sourceforge.net/projects/linxtris (under GPL)
@end itemize

@bye

